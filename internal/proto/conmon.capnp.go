// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
)

type Conmon struct{ Client *capnp.Client }

// Conmon_TypeID is the unique identifier for the type Conmon.
const Conmon_TypeID = 0xb737e899dd6633f1

func (c Conmon) Version(ctx context.Context, params func(Conmon_version_Params) error) (Conmon_version_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      0,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "version",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Conmon_version_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Conmon_version_Results_Future{Future: ans.Future()}, release
}
func (c Conmon) CreateContainer(ctx context.Context, params func(Conmon_createContainer_Params) error) (Conmon_createContainer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      1,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "createContainer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Conmon_createContainer_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Conmon_createContainer_Results_Future{Future: ans.Future()}, release
}
func (c Conmon) ExecSyncContainer(ctx context.Context, params func(Conmon_execSyncContainer_Params) error) (Conmon_execSyncContainer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      2,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "execSyncContainer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Conmon_execSyncContainer_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Conmon_execSyncContainer_Results_Future{Future: ans.Future()}, release
}
func (c Conmon) AttachContainer(ctx context.Context, params func(Conmon_attachContainer_Params) error) (Conmon_attachContainer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      3,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "attachContainer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Conmon_attachContainer_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Conmon_attachContainer_Results_Future{Future: ans.Future()}, release
}

func (c Conmon) AddRef() Conmon {
	return Conmon{
		Client: c.Client.AddRef(),
	}
}

func (c Conmon) Release() {
	c.Client.Release()
}

// A Conmon_Server is a Conmon with a local implementation.
type Conmon_Server interface {
	Version(context.Context, Conmon_version) error

	CreateContainer(context.Context, Conmon_createContainer) error

	ExecSyncContainer(context.Context, Conmon_execSyncContainer) error

	AttachContainer(context.Context, Conmon_attachContainer) error
}

// Conmon_NewServer creates a new Server from an implementation of Conmon_Server.
func Conmon_NewServer(s Conmon_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Conmon_Methods(nil, s), s, c, policy)
}

// Conmon_ServerToClient creates a new Client from an implementation of Conmon_Server.
// The caller is responsible for calling Release on the returned Client.
func Conmon_ServerToClient(s Conmon_Server, policy *server.Policy) Conmon {
	return Conmon{Client: capnp.NewClient(Conmon_NewServer(s, policy))}
}

// Conmon_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Conmon_Methods(methods []server.Method, s Conmon_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 4)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      0,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "version",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Version(ctx, Conmon_version{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      1,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "createContainer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.CreateContainer(ctx, Conmon_createContainer{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      2,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "execSyncContainer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ExecSyncContainer(ctx, Conmon_execSyncContainer{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb737e899dd6633f1,
			MethodID:      3,
			InterfaceName: "conmon-rs/common/proto/conmon.capnp:Conmon",
			MethodName:    "attachContainer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AttachContainer(ctx, Conmon_attachContainer{call})
		},
	})

	return methods
}

// Conmon_version holds the state for a server call to Conmon.version.
// See server.Call for documentation.
type Conmon_version struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Conmon_version) Args() Conmon_version_Params {
	return Conmon_version_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Conmon_version) AllocResults() (Conmon_version_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_version_Results{Struct: r}, err
}

// Conmon_createContainer holds the state for a server call to Conmon.createContainer.
// See server.Call for documentation.
type Conmon_createContainer struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Conmon_createContainer) Args() Conmon_createContainer_Params {
	return Conmon_createContainer_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Conmon_createContainer) AllocResults() (Conmon_createContainer_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Results{Struct: r}, err
}

// Conmon_execSyncContainer holds the state for a server call to Conmon.execSyncContainer.
// See server.Call for documentation.
type Conmon_execSyncContainer struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Conmon_execSyncContainer) Args() Conmon_execSyncContainer_Params {
	return Conmon_execSyncContainer_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Conmon_execSyncContainer) AllocResults() (Conmon_execSyncContainer_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_execSyncContainer_Results{Struct: r}, err
}

// Conmon_attachContainer holds the state for a server call to Conmon.attachContainer.
// See server.Call for documentation.
type Conmon_attachContainer struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Conmon_attachContainer) Args() Conmon_attachContainer_Params {
	return Conmon_attachContainer_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Conmon_attachContainer) AllocResults() (Conmon_attachContainer_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_attachContainer_Results{Struct: r}, err
}

type Conmon_VersionResponse struct{ capnp.Struct }

// Conmon_VersionResponse_TypeID is the unique identifier for the type Conmon_VersionResponse.
const Conmon_VersionResponse_TypeID = 0xf34be5cbac1feed1

func NewConmon_VersionResponse(s *capnp.Segment) (Conmon_VersionResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return Conmon_VersionResponse{st}, err
}

func NewRootConmon_VersionResponse(s *capnp.Segment) (Conmon_VersionResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return Conmon_VersionResponse{st}, err
}

func ReadRootConmon_VersionResponse(msg *capnp.Message) (Conmon_VersionResponse, error) {
	root, err := msg.Root()
	return Conmon_VersionResponse{root.Struct()}, err
}

func (s Conmon_VersionResponse) String() string {
	str, _ := text.Marshal(0xf34be5cbac1feed1, s.Struct)
	return str
}

func (s Conmon_VersionResponse) Version() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasVersion() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_VersionResponse) VersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetVersion(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Conmon_VersionResponse) Tag() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasTag() bool {
	return s.Struct.HasPtr(1)
}

func (s Conmon_VersionResponse) TagBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetTag(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Conmon_VersionResponse) Commit() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasCommit() bool {
	return s.Struct.HasPtr(2)
}

func (s Conmon_VersionResponse) CommitBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetCommit(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Conmon_VersionResponse) BuildDate() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasBuildDate() bool {
	return s.Struct.HasPtr(3)
}

func (s Conmon_VersionResponse) BuildDateBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetBuildDate(v string) error {
	return s.Struct.SetText(3, v)
}

func (s Conmon_VersionResponse) RustVersion() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s Conmon_VersionResponse) HasRustVersion() bool {
	return s.Struct.HasPtr(4)
}

func (s Conmon_VersionResponse) RustVersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s Conmon_VersionResponse) SetRustVersion(v string) error {
	return s.Struct.SetText(4, v)
}

// Conmon_VersionResponse_List is a list of Conmon_VersionResponse.
type Conmon_VersionResponse_List struct{ capnp.List }

// NewConmon_VersionResponse creates a new list of Conmon_VersionResponse.
func NewConmon_VersionResponse_List(s *capnp.Segment, sz int32) (Conmon_VersionResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5}, sz)
	return Conmon_VersionResponse_List{l}, err
}

func (s Conmon_VersionResponse_List) At(i int) Conmon_VersionResponse {
	return Conmon_VersionResponse{s.List.Struct(i)}
}

func (s Conmon_VersionResponse_List) Set(i int, v Conmon_VersionResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_VersionResponse_List) String() string {
	str, _ := text.MarshalList(0xf34be5cbac1feed1, s.List)
	return str
}

// Conmon_VersionResponse_Future is a wrapper for a Conmon_VersionResponse promised by a client call.
type Conmon_VersionResponse_Future struct{ *capnp.Future }

func (p Conmon_VersionResponse_Future) Struct() (Conmon_VersionResponse, error) {
	s, err := p.Future.Struct()
	return Conmon_VersionResponse{s}, err
}

type Conmon_CreateContainerRequest struct{ capnp.Struct }

// Conmon_CreateContainerRequest_TypeID is the unique identifier for the type Conmon_CreateContainerRequest.
const Conmon_CreateContainerRequest_TypeID = 0xba77e3fa3aa9b6ca

func NewConmon_CreateContainerRequest(s *capnp.Segment) (Conmon_CreateContainerRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Conmon_CreateContainerRequest{st}, err
}

func NewRootConmon_CreateContainerRequest(s *capnp.Segment) (Conmon_CreateContainerRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Conmon_CreateContainerRequest{st}, err
}

func ReadRootConmon_CreateContainerRequest(msg *capnp.Message) (Conmon_CreateContainerRequest, error) {
	root, err := msg.Root()
	return Conmon_CreateContainerRequest{root.Struct()}, err
}

func (s Conmon_CreateContainerRequest) String() string {
	str, _ := text.Marshal(0xba77e3fa3aa9b6ca, s.Struct)
	return str
}

func (s Conmon_CreateContainerRequest) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Conmon_CreateContainerRequest) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_CreateContainerRequest) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Conmon_CreateContainerRequest) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Conmon_CreateContainerRequest) BundlePath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Conmon_CreateContainerRequest) HasBundlePath() bool {
	return s.Struct.HasPtr(1)
}

func (s Conmon_CreateContainerRequest) BundlePathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Conmon_CreateContainerRequest) SetBundlePath(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Conmon_CreateContainerRequest) Terminal() bool {
	return s.Struct.Bit(0)
}

func (s Conmon_CreateContainerRequest) SetTerminal(v bool) {
	s.Struct.SetBit(0, v)
}

func (s Conmon_CreateContainerRequest) ExitPaths() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.TextList{List: p.List()}, err
}

func (s Conmon_CreateContainerRequest) HasExitPaths() bool {
	return s.Struct.HasPtr(2)
}

func (s Conmon_CreateContainerRequest) SetExitPaths(v capnp.TextList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewExitPaths sets the exitPaths field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Conmon_CreateContainerRequest) NewExitPaths(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Conmon_CreateContainerRequest) LogPath() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Conmon_CreateContainerRequest) HasLogPath() bool {
	return s.Struct.HasPtr(3)
}

func (s Conmon_CreateContainerRequest) LogPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Conmon_CreateContainerRequest) SetLogPath(v string) error {
	return s.Struct.SetText(3, v)
}

// Conmon_CreateContainerRequest_List is a list of Conmon_CreateContainerRequest.
type Conmon_CreateContainerRequest_List struct{ capnp.List }

// NewConmon_CreateContainerRequest creates a new list of Conmon_CreateContainerRequest.
func NewConmon_CreateContainerRequest_List(s *capnp.Segment, sz int32) (Conmon_CreateContainerRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return Conmon_CreateContainerRequest_List{l}, err
}

func (s Conmon_CreateContainerRequest_List) At(i int) Conmon_CreateContainerRequest {
	return Conmon_CreateContainerRequest{s.List.Struct(i)}
}

func (s Conmon_CreateContainerRequest_List) Set(i int, v Conmon_CreateContainerRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_CreateContainerRequest_List) String() string {
	str, _ := text.MarshalList(0xba77e3fa3aa9b6ca, s.List)
	return str
}

// Conmon_CreateContainerRequest_Future is a wrapper for a Conmon_CreateContainerRequest promised by a client call.
type Conmon_CreateContainerRequest_Future struct{ *capnp.Future }

func (p Conmon_CreateContainerRequest_Future) Struct() (Conmon_CreateContainerRequest, error) {
	s, err := p.Future.Struct()
	return Conmon_CreateContainerRequest{s}, err
}

type Conmon_CreateContainerResponse struct{ capnp.Struct }

// Conmon_CreateContainerResponse_TypeID is the unique identifier for the type Conmon_CreateContainerResponse.
const Conmon_CreateContainerResponse_TypeID = 0xde3a625e70772b9a

func NewConmon_CreateContainerResponse(s *capnp.Segment) (Conmon_CreateContainerResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Conmon_CreateContainerResponse{st}, err
}

func NewRootConmon_CreateContainerResponse(s *capnp.Segment) (Conmon_CreateContainerResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Conmon_CreateContainerResponse{st}, err
}

func ReadRootConmon_CreateContainerResponse(msg *capnp.Message) (Conmon_CreateContainerResponse, error) {
	root, err := msg.Root()
	return Conmon_CreateContainerResponse{root.Struct()}, err
}

func (s Conmon_CreateContainerResponse) String() string {
	str, _ := text.Marshal(0xde3a625e70772b9a, s.Struct)
	return str
}

func (s Conmon_CreateContainerResponse) ContainerPid() uint32 {
	return s.Struct.Uint32(0)
}

func (s Conmon_CreateContainerResponse) SetContainerPid(v uint32) {
	s.Struct.SetUint32(0, v)
}

// Conmon_CreateContainerResponse_List is a list of Conmon_CreateContainerResponse.
type Conmon_CreateContainerResponse_List struct{ capnp.List }

// NewConmon_CreateContainerResponse creates a new list of Conmon_CreateContainerResponse.
func NewConmon_CreateContainerResponse_List(s *capnp.Segment, sz int32) (Conmon_CreateContainerResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Conmon_CreateContainerResponse_List{l}, err
}

func (s Conmon_CreateContainerResponse_List) At(i int) Conmon_CreateContainerResponse {
	return Conmon_CreateContainerResponse{s.List.Struct(i)}
}

func (s Conmon_CreateContainerResponse_List) Set(i int, v Conmon_CreateContainerResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_CreateContainerResponse_List) String() string {
	str, _ := text.MarshalList(0xde3a625e70772b9a, s.List)
	return str
}

// Conmon_CreateContainerResponse_Future is a wrapper for a Conmon_CreateContainerResponse promised by a client call.
type Conmon_CreateContainerResponse_Future struct{ *capnp.Future }

func (p Conmon_CreateContainerResponse_Future) Struct() (Conmon_CreateContainerResponse, error) {
	s, err := p.Future.Struct()
	return Conmon_CreateContainerResponse{s}, err
}

type Conmon_ExecSyncContainerRequest struct{ capnp.Struct }

// Conmon_ExecSyncContainerRequest_TypeID is the unique identifier for the type Conmon_ExecSyncContainerRequest.
const Conmon_ExecSyncContainerRequest_TypeID = 0xf41122f890a371a6

func NewConmon_ExecSyncContainerRequest(s *capnp.Segment) (Conmon_ExecSyncContainerRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Conmon_ExecSyncContainerRequest{st}, err
}

func NewRootConmon_ExecSyncContainerRequest(s *capnp.Segment) (Conmon_ExecSyncContainerRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Conmon_ExecSyncContainerRequest{st}, err
}

func ReadRootConmon_ExecSyncContainerRequest(msg *capnp.Message) (Conmon_ExecSyncContainerRequest, error) {
	root, err := msg.Root()
	return Conmon_ExecSyncContainerRequest{root.Struct()}, err
}

func (s Conmon_ExecSyncContainerRequest) String() string {
	str, _ := text.Marshal(0xf41122f890a371a6, s.Struct)
	return str
}

func (s Conmon_ExecSyncContainerRequest) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Conmon_ExecSyncContainerRequest) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_ExecSyncContainerRequest) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Conmon_ExecSyncContainerRequest) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Conmon_ExecSyncContainerRequest) TimeoutSec() uint64 {
	return s.Struct.Uint64(0)
}

func (s Conmon_ExecSyncContainerRequest) SetTimeoutSec(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Conmon_ExecSyncContainerRequest) Command() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.TextList{List: p.List()}, err
}

func (s Conmon_ExecSyncContainerRequest) HasCommand() bool {
	return s.Struct.HasPtr(1)
}

func (s Conmon_ExecSyncContainerRequest) SetCommand(v capnp.TextList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewCommand sets the command field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Conmon_ExecSyncContainerRequest) NewCommand(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s Conmon_ExecSyncContainerRequest) Terminal() bool {
	return s.Struct.Bit(64)
}

func (s Conmon_ExecSyncContainerRequest) SetTerminal(v bool) {
	s.Struct.SetBit(64, v)
}

// Conmon_ExecSyncContainerRequest_List is a list of Conmon_ExecSyncContainerRequest.
type Conmon_ExecSyncContainerRequest_List struct{ capnp.List }

// NewConmon_ExecSyncContainerRequest creates a new list of Conmon_ExecSyncContainerRequest.
func NewConmon_ExecSyncContainerRequest_List(s *capnp.Segment, sz int32) (Conmon_ExecSyncContainerRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2}, sz)
	return Conmon_ExecSyncContainerRequest_List{l}, err
}

func (s Conmon_ExecSyncContainerRequest_List) At(i int) Conmon_ExecSyncContainerRequest {
	return Conmon_ExecSyncContainerRequest{s.List.Struct(i)}
}

func (s Conmon_ExecSyncContainerRequest_List) Set(i int, v Conmon_ExecSyncContainerRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_ExecSyncContainerRequest_List) String() string {
	str, _ := text.MarshalList(0xf41122f890a371a6, s.List)
	return str
}

// Conmon_ExecSyncContainerRequest_Future is a wrapper for a Conmon_ExecSyncContainerRequest promised by a client call.
type Conmon_ExecSyncContainerRequest_Future struct{ *capnp.Future }

func (p Conmon_ExecSyncContainerRequest_Future) Struct() (Conmon_ExecSyncContainerRequest, error) {
	s, err := p.Future.Struct()
	return Conmon_ExecSyncContainerRequest{s}, err
}

type Conmon_ExecSyncContainerResponse struct{ capnp.Struct }

// Conmon_ExecSyncContainerResponse_TypeID is the unique identifier for the type Conmon_ExecSyncContainerResponse.
const Conmon_ExecSyncContainerResponse_TypeID = 0xd9d61d1d803c85fc

func NewConmon_ExecSyncContainerResponse(s *capnp.Segment) (Conmon_ExecSyncContainerResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Conmon_ExecSyncContainerResponse{st}, err
}

func NewRootConmon_ExecSyncContainerResponse(s *capnp.Segment) (Conmon_ExecSyncContainerResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Conmon_ExecSyncContainerResponse{st}, err
}

func ReadRootConmon_ExecSyncContainerResponse(msg *capnp.Message) (Conmon_ExecSyncContainerResponse, error) {
	root, err := msg.Root()
	return Conmon_ExecSyncContainerResponse{root.Struct()}, err
}

func (s Conmon_ExecSyncContainerResponse) String() string {
	str, _ := text.Marshal(0xd9d61d1d803c85fc, s.Struct)
	return str
}

func (s Conmon_ExecSyncContainerResponse) ExitCode() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s Conmon_ExecSyncContainerResponse) SetExitCode(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

func (s Conmon_ExecSyncContainerResponse) Stdout() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Conmon_ExecSyncContainerResponse) HasStdout() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_ExecSyncContainerResponse) SetStdout(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Conmon_ExecSyncContainerResponse) Stderr() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s Conmon_ExecSyncContainerResponse) HasStderr() bool {
	return s.Struct.HasPtr(1)
}

func (s Conmon_ExecSyncContainerResponse) SetStderr(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s Conmon_ExecSyncContainerResponse) TimedOut() bool {
	return s.Struct.Bit(32)
}

func (s Conmon_ExecSyncContainerResponse) SetTimedOut(v bool) {
	s.Struct.SetBit(32, v)
}

// Conmon_ExecSyncContainerResponse_List is a list of Conmon_ExecSyncContainerResponse.
type Conmon_ExecSyncContainerResponse_List struct{ capnp.List }

// NewConmon_ExecSyncContainerResponse creates a new list of Conmon_ExecSyncContainerResponse.
func NewConmon_ExecSyncContainerResponse_List(s *capnp.Segment, sz int32) (Conmon_ExecSyncContainerResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return Conmon_ExecSyncContainerResponse_List{l}, err
}

func (s Conmon_ExecSyncContainerResponse_List) At(i int) Conmon_ExecSyncContainerResponse {
	return Conmon_ExecSyncContainerResponse{s.List.Struct(i)}
}

func (s Conmon_ExecSyncContainerResponse_List) Set(i int, v Conmon_ExecSyncContainerResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_ExecSyncContainerResponse_List) String() string {
	str, _ := text.MarshalList(0xd9d61d1d803c85fc, s.List)
	return str
}

// Conmon_ExecSyncContainerResponse_Future is a wrapper for a Conmon_ExecSyncContainerResponse promised by a client call.
type Conmon_ExecSyncContainerResponse_Future struct{ *capnp.Future }

func (p Conmon_ExecSyncContainerResponse_Future) Struct() (Conmon_ExecSyncContainerResponse, error) {
	s, err := p.Future.Struct()
	return Conmon_ExecSyncContainerResponse{s}, err
}

type Conmon_AttachRequest struct{ capnp.Struct }

// Conmon_AttachRequest_TypeID is the unique identifier for the type Conmon_AttachRequest.
const Conmon_AttachRequest_TypeID = 0xdf703ca0befc3afc

func NewConmon_AttachRequest(s *capnp.Segment) (Conmon_AttachRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Conmon_AttachRequest{st}, err
}

func NewRootConmon_AttachRequest(s *capnp.Segment) (Conmon_AttachRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Conmon_AttachRequest{st}, err
}

func ReadRootConmon_AttachRequest(msg *capnp.Message) (Conmon_AttachRequest, error) {
	root, err := msg.Root()
	return Conmon_AttachRequest{root.Struct()}, err
}

func (s Conmon_AttachRequest) String() string {
	str, _ := text.Marshal(0xdf703ca0befc3afc, s.Struct)
	return str
}

func (s Conmon_AttachRequest) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Conmon_AttachRequest) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_AttachRequest) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Conmon_AttachRequest) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Conmon_AttachRequest) SocketPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Conmon_AttachRequest) HasSocketPath() bool {
	return s.Struct.HasPtr(1)
}

func (s Conmon_AttachRequest) SocketPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Conmon_AttachRequest) SetSocketPath(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Conmon_AttachRequest) ExecSessionId() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Conmon_AttachRequest) HasExecSessionId() bool {
	return s.Struct.HasPtr(2)
}

func (s Conmon_AttachRequest) ExecSessionIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Conmon_AttachRequest) SetExecSessionId(v string) error {
	return s.Struct.SetText(2, v)
}

// Conmon_AttachRequest_List is a list of Conmon_AttachRequest.
type Conmon_AttachRequest_List struct{ capnp.List }

// NewConmon_AttachRequest creates a new list of Conmon_AttachRequest.
func NewConmon_AttachRequest_List(s *capnp.Segment, sz int32) (Conmon_AttachRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Conmon_AttachRequest_List{l}, err
}

func (s Conmon_AttachRequest_List) At(i int) Conmon_AttachRequest {
	return Conmon_AttachRequest{s.List.Struct(i)}
}

func (s Conmon_AttachRequest_List) Set(i int, v Conmon_AttachRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_AttachRequest_List) String() string {
	str, _ := text.MarshalList(0xdf703ca0befc3afc, s.List)
	return str
}

// Conmon_AttachRequest_Future is a wrapper for a Conmon_AttachRequest promised by a client call.
type Conmon_AttachRequest_Future struct{ *capnp.Future }

func (p Conmon_AttachRequest_Future) Struct() (Conmon_AttachRequest, error) {
	s, err := p.Future.Struct()
	return Conmon_AttachRequest{s}, err
}

type Conmon_AttachResponse struct{ capnp.Struct }

// Conmon_AttachResponse_TypeID is the unique identifier for the type Conmon_AttachResponse.
const Conmon_AttachResponse_TypeID = 0xace5517aafc86077

func NewConmon_AttachResponse(s *capnp.Segment) (Conmon_AttachResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Conmon_AttachResponse{st}, err
}

func NewRootConmon_AttachResponse(s *capnp.Segment) (Conmon_AttachResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Conmon_AttachResponse{st}, err
}

func ReadRootConmon_AttachResponse(msg *capnp.Message) (Conmon_AttachResponse, error) {
	root, err := msg.Root()
	return Conmon_AttachResponse{root.Struct()}, err
}

func (s Conmon_AttachResponse) String() string {
	str, _ := text.Marshal(0xace5517aafc86077, s.Struct)
	return str
}

// Conmon_AttachResponse_List is a list of Conmon_AttachResponse.
type Conmon_AttachResponse_List struct{ capnp.List }

// NewConmon_AttachResponse creates a new list of Conmon_AttachResponse.
func NewConmon_AttachResponse_List(s *capnp.Segment, sz int32) (Conmon_AttachResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Conmon_AttachResponse_List{l}, err
}

func (s Conmon_AttachResponse_List) At(i int) Conmon_AttachResponse {
	return Conmon_AttachResponse{s.List.Struct(i)}
}

func (s Conmon_AttachResponse_List) Set(i int, v Conmon_AttachResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_AttachResponse_List) String() string {
	str, _ := text.MarshalList(0xace5517aafc86077, s.List)
	return str
}

// Conmon_AttachResponse_Future is a wrapper for a Conmon_AttachResponse promised by a client call.
type Conmon_AttachResponse_Future struct{ *capnp.Future }

func (p Conmon_AttachResponse_Future) Struct() (Conmon_AttachResponse, error) {
	s, err := p.Future.Struct()
	return Conmon_AttachResponse{s}, err
}

type Conmon_version_Params struct{ capnp.Struct }

// Conmon_version_Params_TypeID is the unique identifier for the type Conmon_version_Params.
const Conmon_version_Params_TypeID = 0xcc2f70676afee4e7

func NewConmon_version_Params(s *capnp.Segment) (Conmon_version_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Conmon_version_Params{st}, err
}

func NewRootConmon_version_Params(s *capnp.Segment) (Conmon_version_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Conmon_version_Params{st}, err
}

func ReadRootConmon_version_Params(msg *capnp.Message) (Conmon_version_Params, error) {
	root, err := msg.Root()
	return Conmon_version_Params{root.Struct()}, err
}

func (s Conmon_version_Params) String() string {
	str, _ := text.Marshal(0xcc2f70676afee4e7, s.Struct)
	return str
}

// Conmon_version_Params_List is a list of Conmon_version_Params.
type Conmon_version_Params_List struct{ capnp.List }

// NewConmon_version_Params creates a new list of Conmon_version_Params.
func NewConmon_version_Params_List(s *capnp.Segment, sz int32) (Conmon_version_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Conmon_version_Params_List{l}, err
}

func (s Conmon_version_Params_List) At(i int) Conmon_version_Params {
	return Conmon_version_Params{s.List.Struct(i)}
}

func (s Conmon_version_Params_List) Set(i int, v Conmon_version_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_version_Params_List) String() string {
	str, _ := text.MarshalList(0xcc2f70676afee4e7, s.List)
	return str
}

// Conmon_version_Params_Future is a wrapper for a Conmon_version_Params promised by a client call.
type Conmon_version_Params_Future struct{ *capnp.Future }

func (p Conmon_version_Params_Future) Struct() (Conmon_version_Params, error) {
	s, err := p.Future.Struct()
	return Conmon_version_Params{s}, err
}

type Conmon_version_Results struct{ capnp.Struct }

// Conmon_version_Results_TypeID is the unique identifier for the type Conmon_version_Results.
const Conmon_version_Results_TypeID = 0xe313695ea9477b30

func NewConmon_version_Results(s *capnp.Segment) (Conmon_version_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_version_Results{st}, err
}

func NewRootConmon_version_Results(s *capnp.Segment) (Conmon_version_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_version_Results{st}, err
}

func ReadRootConmon_version_Results(msg *capnp.Message) (Conmon_version_Results, error) {
	root, err := msg.Root()
	return Conmon_version_Results{root.Struct()}, err
}

func (s Conmon_version_Results) String() string {
	str, _ := text.Marshal(0xe313695ea9477b30, s.Struct)
	return str
}

func (s Conmon_version_Results) Response() (Conmon_VersionResponse, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_VersionResponse{Struct: p.Struct()}, err
}

func (s Conmon_version_Results) HasResponse() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_version_Results) SetResponse(v Conmon_VersionResponse) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResponse sets the response field to a newly
// allocated Conmon_VersionResponse struct, preferring placement in s's segment.
func (s Conmon_version_Results) NewResponse() (Conmon_VersionResponse, error) {
	ss, err := NewConmon_VersionResponse(s.Struct.Segment())
	if err != nil {
		return Conmon_VersionResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_version_Results_List is a list of Conmon_version_Results.
type Conmon_version_Results_List struct{ capnp.List }

// NewConmon_version_Results creates a new list of Conmon_version_Results.
func NewConmon_version_Results_List(s *capnp.Segment, sz int32) (Conmon_version_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_version_Results_List{l}, err
}

func (s Conmon_version_Results_List) At(i int) Conmon_version_Results {
	return Conmon_version_Results{s.List.Struct(i)}
}

func (s Conmon_version_Results_List) Set(i int, v Conmon_version_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_version_Results_List) String() string {
	str, _ := text.MarshalList(0xe313695ea9477b30, s.List)
	return str
}

// Conmon_version_Results_Future is a wrapper for a Conmon_version_Results promised by a client call.
type Conmon_version_Results_Future struct{ *capnp.Future }

func (p Conmon_version_Results_Future) Struct() (Conmon_version_Results, error) {
	s, err := p.Future.Struct()
	return Conmon_version_Results{s}, err
}

func (p Conmon_version_Results_Future) Response() Conmon_VersionResponse_Future {
	return Conmon_VersionResponse_Future{Future: p.Future.Field(0, nil)}
}

type Conmon_createContainer_Params struct{ capnp.Struct }

// Conmon_createContainer_Params_TypeID is the unique identifier for the type Conmon_createContainer_Params.
const Conmon_createContainer_Params_TypeID = 0xf44732c48f949ab8

func NewConmon_createContainer_Params(s *capnp.Segment) (Conmon_createContainer_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Params{st}, err
}

func NewRootConmon_createContainer_Params(s *capnp.Segment) (Conmon_createContainer_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Params{st}, err
}

func ReadRootConmon_createContainer_Params(msg *capnp.Message) (Conmon_createContainer_Params, error) {
	root, err := msg.Root()
	return Conmon_createContainer_Params{root.Struct()}, err
}

func (s Conmon_createContainer_Params) String() string {
	str, _ := text.Marshal(0xf44732c48f949ab8, s.Struct)
	return str
}

func (s Conmon_createContainer_Params) Request() (Conmon_CreateContainerRequest, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_CreateContainerRequest{Struct: p.Struct()}, err
}

func (s Conmon_createContainer_Params) HasRequest() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_createContainer_Params) SetRequest(v Conmon_CreateContainerRequest) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRequest sets the request field to a newly
// allocated Conmon_CreateContainerRequest struct, preferring placement in s's segment.
func (s Conmon_createContainer_Params) NewRequest() (Conmon_CreateContainerRequest, error) {
	ss, err := NewConmon_CreateContainerRequest(s.Struct.Segment())
	if err != nil {
		return Conmon_CreateContainerRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_createContainer_Params_List is a list of Conmon_createContainer_Params.
type Conmon_createContainer_Params_List struct{ capnp.List }

// NewConmon_createContainer_Params creates a new list of Conmon_createContainer_Params.
func NewConmon_createContainer_Params_List(s *capnp.Segment, sz int32) (Conmon_createContainer_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_createContainer_Params_List{l}, err
}

func (s Conmon_createContainer_Params_List) At(i int) Conmon_createContainer_Params {
	return Conmon_createContainer_Params{s.List.Struct(i)}
}

func (s Conmon_createContainer_Params_List) Set(i int, v Conmon_createContainer_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_createContainer_Params_List) String() string {
	str, _ := text.MarshalList(0xf44732c48f949ab8, s.List)
	return str
}

// Conmon_createContainer_Params_Future is a wrapper for a Conmon_createContainer_Params promised by a client call.
type Conmon_createContainer_Params_Future struct{ *capnp.Future }

func (p Conmon_createContainer_Params_Future) Struct() (Conmon_createContainer_Params, error) {
	s, err := p.Future.Struct()
	return Conmon_createContainer_Params{s}, err
}

func (p Conmon_createContainer_Params_Future) Request() Conmon_CreateContainerRequest_Future {
	return Conmon_CreateContainerRequest_Future{Future: p.Future.Field(0, nil)}
}

type Conmon_createContainer_Results struct{ capnp.Struct }

// Conmon_createContainer_Results_TypeID is the unique identifier for the type Conmon_createContainer_Results.
const Conmon_createContainer_Results_TypeID = 0xceba3c1a97be15f8

func NewConmon_createContainer_Results(s *capnp.Segment) (Conmon_createContainer_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Results{st}, err
}

func NewRootConmon_createContainer_Results(s *capnp.Segment) (Conmon_createContainer_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_createContainer_Results{st}, err
}

func ReadRootConmon_createContainer_Results(msg *capnp.Message) (Conmon_createContainer_Results, error) {
	root, err := msg.Root()
	return Conmon_createContainer_Results{root.Struct()}, err
}

func (s Conmon_createContainer_Results) String() string {
	str, _ := text.Marshal(0xceba3c1a97be15f8, s.Struct)
	return str
}

func (s Conmon_createContainer_Results) Response() (Conmon_CreateContainerResponse, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_CreateContainerResponse{Struct: p.Struct()}, err
}

func (s Conmon_createContainer_Results) HasResponse() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_createContainer_Results) SetResponse(v Conmon_CreateContainerResponse) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResponse sets the response field to a newly
// allocated Conmon_CreateContainerResponse struct, preferring placement in s's segment.
func (s Conmon_createContainer_Results) NewResponse() (Conmon_CreateContainerResponse, error) {
	ss, err := NewConmon_CreateContainerResponse(s.Struct.Segment())
	if err != nil {
		return Conmon_CreateContainerResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_createContainer_Results_List is a list of Conmon_createContainer_Results.
type Conmon_createContainer_Results_List struct{ capnp.List }

// NewConmon_createContainer_Results creates a new list of Conmon_createContainer_Results.
func NewConmon_createContainer_Results_List(s *capnp.Segment, sz int32) (Conmon_createContainer_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_createContainer_Results_List{l}, err
}

func (s Conmon_createContainer_Results_List) At(i int) Conmon_createContainer_Results {
	return Conmon_createContainer_Results{s.List.Struct(i)}
}

func (s Conmon_createContainer_Results_List) Set(i int, v Conmon_createContainer_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_createContainer_Results_List) String() string {
	str, _ := text.MarshalList(0xceba3c1a97be15f8, s.List)
	return str
}

// Conmon_createContainer_Results_Future is a wrapper for a Conmon_createContainer_Results promised by a client call.
type Conmon_createContainer_Results_Future struct{ *capnp.Future }

func (p Conmon_createContainer_Results_Future) Struct() (Conmon_createContainer_Results, error) {
	s, err := p.Future.Struct()
	return Conmon_createContainer_Results{s}, err
}

func (p Conmon_createContainer_Results_Future) Response() Conmon_CreateContainerResponse_Future {
	return Conmon_CreateContainerResponse_Future{Future: p.Future.Field(0, nil)}
}

type Conmon_execSyncContainer_Params struct{ capnp.Struct }

// Conmon_execSyncContainer_Params_TypeID is the unique identifier for the type Conmon_execSyncContainer_Params.
const Conmon_execSyncContainer_Params_TypeID = 0x83479da67279e173

func NewConmon_execSyncContainer_Params(s *capnp.Segment) (Conmon_execSyncContainer_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_execSyncContainer_Params{st}, err
}

func NewRootConmon_execSyncContainer_Params(s *capnp.Segment) (Conmon_execSyncContainer_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_execSyncContainer_Params{st}, err
}

func ReadRootConmon_execSyncContainer_Params(msg *capnp.Message) (Conmon_execSyncContainer_Params, error) {
	root, err := msg.Root()
	return Conmon_execSyncContainer_Params{root.Struct()}, err
}

func (s Conmon_execSyncContainer_Params) String() string {
	str, _ := text.Marshal(0x83479da67279e173, s.Struct)
	return str
}

func (s Conmon_execSyncContainer_Params) Request() (Conmon_ExecSyncContainerRequest, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_ExecSyncContainerRequest{Struct: p.Struct()}, err
}

func (s Conmon_execSyncContainer_Params) HasRequest() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_execSyncContainer_Params) SetRequest(v Conmon_ExecSyncContainerRequest) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRequest sets the request field to a newly
// allocated Conmon_ExecSyncContainerRequest struct, preferring placement in s's segment.
func (s Conmon_execSyncContainer_Params) NewRequest() (Conmon_ExecSyncContainerRequest, error) {
	ss, err := NewConmon_ExecSyncContainerRequest(s.Struct.Segment())
	if err != nil {
		return Conmon_ExecSyncContainerRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_execSyncContainer_Params_List is a list of Conmon_execSyncContainer_Params.
type Conmon_execSyncContainer_Params_List struct{ capnp.List }

// NewConmon_execSyncContainer_Params creates a new list of Conmon_execSyncContainer_Params.
func NewConmon_execSyncContainer_Params_List(s *capnp.Segment, sz int32) (Conmon_execSyncContainer_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_execSyncContainer_Params_List{l}, err
}

func (s Conmon_execSyncContainer_Params_List) At(i int) Conmon_execSyncContainer_Params {
	return Conmon_execSyncContainer_Params{s.List.Struct(i)}
}

func (s Conmon_execSyncContainer_Params_List) Set(i int, v Conmon_execSyncContainer_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_execSyncContainer_Params_List) String() string {
	str, _ := text.MarshalList(0x83479da67279e173, s.List)
	return str
}

// Conmon_execSyncContainer_Params_Future is a wrapper for a Conmon_execSyncContainer_Params promised by a client call.
type Conmon_execSyncContainer_Params_Future struct{ *capnp.Future }

func (p Conmon_execSyncContainer_Params_Future) Struct() (Conmon_execSyncContainer_Params, error) {
	s, err := p.Future.Struct()
	return Conmon_execSyncContainer_Params{s}, err
}

func (p Conmon_execSyncContainer_Params_Future) Request() Conmon_ExecSyncContainerRequest_Future {
	return Conmon_ExecSyncContainerRequest_Future{Future: p.Future.Field(0, nil)}
}

type Conmon_execSyncContainer_Results struct{ capnp.Struct }

// Conmon_execSyncContainer_Results_TypeID is the unique identifier for the type Conmon_execSyncContainer_Results.
const Conmon_execSyncContainer_Results_TypeID = 0xf8e86a5c0baa01bc

func NewConmon_execSyncContainer_Results(s *capnp.Segment) (Conmon_execSyncContainer_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_execSyncContainer_Results{st}, err
}

func NewRootConmon_execSyncContainer_Results(s *capnp.Segment) (Conmon_execSyncContainer_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_execSyncContainer_Results{st}, err
}

func ReadRootConmon_execSyncContainer_Results(msg *capnp.Message) (Conmon_execSyncContainer_Results, error) {
	root, err := msg.Root()
	return Conmon_execSyncContainer_Results{root.Struct()}, err
}

func (s Conmon_execSyncContainer_Results) String() string {
	str, _ := text.Marshal(0xf8e86a5c0baa01bc, s.Struct)
	return str
}

func (s Conmon_execSyncContainer_Results) Response() (Conmon_ExecSyncContainerResponse, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_ExecSyncContainerResponse{Struct: p.Struct()}, err
}

func (s Conmon_execSyncContainer_Results) HasResponse() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_execSyncContainer_Results) SetResponse(v Conmon_ExecSyncContainerResponse) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResponse sets the response field to a newly
// allocated Conmon_ExecSyncContainerResponse struct, preferring placement in s's segment.
func (s Conmon_execSyncContainer_Results) NewResponse() (Conmon_ExecSyncContainerResponse, error) {
	ss, err := NewConmon_ExecSyncContainerResponse(s.Struct.Segment())
	if err != nil {
		return Conmon_ExecSyncContainerResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_execSyncContainer_Results_List is a list of Conmon_execSyncContainer_Results.
type Conmon_execSyncContainer_Results_List struct{ capnp.List }

// NewConmon_execSyncContainer_Results creates a new list of Conmon_execSyncContainer_Results.
func NewConmon_execSyncContainer_Results_List(s *capnp.Segment, sz int32) (Conmon_execSyncContainer_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_execSyncContainer_Results_List{l}, err
}

func (s Conmon_execSyncContainer_Results_List) At(i int) Conmon_execSyncContainer_Results {
	return Conmon_execSyncContainer_Results{s.List.Struct(i)}
}

func (s Conmon_execSyncContainer_Results_List) Set(i int, v Conmon_execSyncContainer_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_execSyncContainer_Results_List) String() string {
	str, _ := text.MarshalList(0xf8e86a5c0baa01bc, s.List)
	return str
}

// Conmon_execSyncContainer_Results_Future is a wrapper for a Conmon_execSyncContainer_Results promised by a client call.
type Conmon_execSyncContainer_Results_Future struct{ *capnp.Future }

func (p Conmon_execSyncContainer_Results_Future) Struct() (Conmon_execSyncContainer_Results, error) {
	s, err := p.Future.Struct()
	return Conmon_execSyncContainer_Results{s}, err
}

func (p Conmon_execSyncContainer_Results_Future) Response() Conmon_ExecSyncContainerResponse_Future {
	return Conmon_ExecSyncContainerResponse_Future{Future: p.Future.Field(0, nil)}
}

type Conmon_attachContainer_Params struct{ capnp.Struct }

// Conmon_attachContainer_Params_TypeID is the unique identifier for the type Conmon_attachContainer_Params.
const Conmon_attachContainer_Params_TypeID = 0xaa2f3c8ad1c3af24

func NewConmon_attachContainer_Params(s *capnp.Segment) (Conmon_attachContainer_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_attachContainer_Params{st}, err
}

func NewRootConmon_attachContainer_Params(s *capnp.Segment) (Conmon_attachContainer_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_attachContainer_Params{st}, err
}

func ReadRootConmon_attachContainer_Params(msg *capnp.Message) (Conmon_attachContainer_Params, error) {
	root, err := msg.Root()
	return Conmon_attachContainer_Params{root.Struct()}, err
}

func (s Conmon_attachContainer_Params) String() string {
	str, _ := text.Marshal(0xaa2f3c8ad1c3af24, s.Struct)
	return str
}

func (s Conmon_attachContainer_Params) Request() (Conmon_AttachRequest, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_AttachRequest{Struct: p.Struct()}, err
}

func (s Conmon_attachContainer_Params) HasRequest() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_attachContainer_Params) SetRequest(v Conmon_AttachRequest) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRequest sets the request field to a newly
// allocated Conmon_AttachRequest struct, preferring placement in s's segment.
func (s Conmon_attachContainer_Params) NewRequest() (Conmon_AttachRequest, error) {
	ss, err := NewConmon_AttachRequest(s.Struct.Segment())
	if err != nil {
		return Conmon_AttachRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_attachContainer_Params_List is a list of Conmon_attachContainer_Params.
type Conmon_attachContainer_Params_List struct{ capnp.List }

// NewConmon_attachContainer_Params creates a new list of Conmon_attachContainer_Params.
func NewConmon_attachContainer_Params_List(s *capnp.Segment, sz int32) (Conmon_attachContainer_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_attachContainer_Params_List{l}, err
}

func (s Conmon_attachContainer_Params_List) At(i int) Conmon_attachContainer_Params {
	return Conmon_attachContainer_Params{s.List.Struct(i)}
}

func (s Conmon_attachContainer_Params_List) Set(i int, v Conmon_attachContainer_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_attachContainer_Params_List) String() string {
	str, _ := text.MarshalList(0xaa2f3c8ad1c3af24, s.List)
	return str
}

// Conmon_attachContainer_Params_Future is a wrapper for a Conmon_attachContainer_Params promised by a client call.
type Conmon_attachContainer_Params_Future struct{ *capnp.Future }

func (p Conmon_attachContainer_Params_Future) Struct() (Conmon_attachContainer_Params, error) {
	s, err := p.Future.Struct()
	return Conmon_attachContainer_Params{s}, err
}

func (p Conmon_attachContainer_Params_Future) Request() Conmon_AttachRequest_Future {
	return Conmon_AttachRequest_Future{Future: p.Future.Field(0, nil)}
}

type Conmon_attachContainer_Results struct{ capnp.Struct }

// Conmon_attachContainer_Results_TypeID is the unique identifier for the type Conmon_attachContainer_Results.
const Conmon_attachContainer_Results_TypeID = 0xc5e65eec3dcf5b10

func NewConmon_attachContainer_Results(s *capnp.Segment) (Conmon_attachContainer_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_attachContainer_Results{st}, err
}

func NewRootConmon_attachContainer_Results(s *capnp.Segment) (Conmon_attachContainer_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Conmon_attachContainer_Results{st}, err
}

func ReadRootConmon_attachContainer_Results(msg *capnp.Message) (Conmon_attachContainer_Results, error) {
	root, err := msg.Root()
	return Conmon_attachContainer_Results{root.Struct()}, err
}

func (s Conmon_attachContainer_Results) String() string {
	str, _ := text.Marshal(0xc5e65eec3dcf5b10, s.Struct)
	return str
}

func (s Conmon_attachContainer_Results) Response() (Conmon_AttachResponse, error) {
	p, err := s.Struct.Ptr(0)
	return Conmon_AttachResponse{Struct: p.Struct()}, err
}

func (s Conmon_attachContainer_Results) HasResponse() bool {
	return s.Struct.HasPtr(0)
}

func (s Conmon_attachContainer_Results) SetResponse(v Conmon_AttachResponse) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResponse sets the response field to a newly
// allocated Conmon_AttachResponse struct, preferring placement in s's segment.
func (s Conmon_attachContainer_Results) NewResponse() (Conmon_AttachResponse, error) {
	ss, err := NewConmon_AttachResponse(s.Struct.Segment())
	if err != nil {
		return Conmon_AttachResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Conmon_attachContainer_Results_List is a list of Conmon_attachContainer_Results.
type Conmon_attachContainer_Results_List struct{ capnp.List }

// NewConmon_attachContainer_Results creates a new list of Conmon_attachContainer_Results.
func NewConmon_attachContainer_Results_List(s *capnp.Segment, sz int32) (Conmon_attachContainer_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Conmon_attachContainer_Results_List{l}, err
}

func (s Conmon_attachContainer_Results_List) At(i int) Conmon_attachContainer_Results {
	return Conmon_attachContainer_Results{s.List.Struct(i)}
}

func (s Conmon_attachContainer_Results_List) Set(i int, v Conmon_attachContainer_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Conmon_attachContainer_Results_List) String() string {
	str, _ := text.MarshalList(0xc5e65eec3dcf5b10, s.List)
	return str
}

// Conmon_attachContainer_Results_Future is a wrapper for a Conmon_attachContainer_Results promised by a client call.
type Conmon_attachContainer_Results_Future struct{ *capnp.Future }

func (p Conmon_attachContainer_Results_Future) Struct() (Conmon_attachContainer_Results, error) {
	s, err := p.Future.Struct()
	return Conmon_attachContainer_Results{s}, err
}

func (p Conmon_attachContainer_Results_Future) Response() Conmon_AttachResponse_Future {
	return Conmon_AttachResponse_Future{Future: p.Future.Field(0, nil)}
}

const schema_ffaaf7385bc4adad = "x\xda\xa4Vm\x88T\xd5\x1f\xfe\xfd\xce\xb93w\xd6" +
	"\xdd\xd5\xbd\xce\xfe\xe1\xdf\xd2\xb2\xb1\xf8I\xb1\xd5\x16)" +
	"\x97\x95]w\x13[\x0b\x9a3V\xe0\x0b\xe2u\xe6\xe4" +
	"^\x9b\xb9w\xf6\xde3\xad\x9a\xb1j\x09\x1aA\x1aF" +
	"%\x09A%\xac(\xf6\xa9\x17)\xc1R({C\xa1" +
	" \xc1\"l\xd3 \x02\xc9h\x0b\xeb\xc6\xb9w\xee\x9d" +
	"\xb3\xe3B\xfb\xf2m\xee9\xbf\xb7\xf3\x9c\xe7y\xe6," +
	"y\x85\xf6\x92\xa5\x89kI\x00\x96I$}\xef\x87\x1d" +
	"\xee\xb1\xa3\xab\x9f\x01c\x11\x02$P\x07\xe8\\G\xdb" +
	"\x09`z\x88\xf6\x00\xfa\x0bN}|\xf1\xb9\xee\x8e\xe3" +
	"j\xc0!:_\x06\x8c\x06\x01\xc3\x9b?9\xb5\x93\x8d" +
	"\x9d\x90\x01\xfe\x8d\xce\xc7\xaf\xbcz\xfd\xdewA\x93q" +
	"\x9f\xd2K\x98\x1e\xa3:\xd0\xea\x86\xb1\x80\xfa'O\x9e" +
	"\xdbp\xdf\x1f\xc7}\x00\xec<K\xd7c\xfak:," +
	"\xfbj:\xa6\xeb\x12:\x80\x7f\xe1\x9d\xd1\xae\xbf\xae\x0e" +
	"\x9f\x06\xb6\x08\x95\xaa\x89\xa0\xec\x0dm>I\x1b2\xae" +
	"\xb31\xd1\x86\x80~\xd3\x86\xafV\xfc\xb2\xe9\xa7\xf3\xea" +
	"\x90\xcb\x93-rH\x96\x94C^\xfb\xf1\x9fm[K" +
	"\x1d\x9f\x87\x01A\x95r\xf2\x12\x82\xe6\x8f\xff\xef\xcc\xcb" +
	"-\xdd\xa7\xbfTS\xad0uO\x90zk_\xf7\xee" +
	"\xd6\xd6o\xbe\xad\x1d\x85\xc8\xc8\xb7\x92\x0bI\xfa|R" +
	"\x07H\x9fM^\x03\xf4\x8f,\x1a.m\xda\xd2\xf5]" +
	"Mt\xd0\xf1\xa8\xdeB\xd2\x1f\xea2\xf8}=(\xdd" +
	"u\xeb\xcc\xeb\xdd\xa5\xef'B\x97\xa02\xf8\x8a~\x01" +
	"\xd3\x7f\x06\xc1\xbf\xeb\xa7\x00\xfd%O\xad\x1e\xddd\xa5" +
	"\xaf\xaa\x83\xbe\x94\xba\x8c\xf2\"R\xb2\xda\xc5_\xdbN" +
	"|6\xf6\xe0o5\xd5\x02\x9c\xbeH]\xc6\xf4\xcf)" +
	"\xf9s,\x15@vl\xe8\x8d\x83\xe3\xed\xc6M9(" +
	"\xa9=\xd6\xdfu\xed$\xdd:G6\xbfc\x8e<\xd6" +
	"{G\x0e\xbfp\xee\x9e\xd57\xd5\xe6\x89\xfa\x80\x05\xad" +
	"\xf5\xb2\xf9\x07x\xbc~\xe3\xb6\xeb\xe3j\xc0\x8a\xfa\x85" +
	"2\xe0\xd1\xfa\x1eX\xec\xe7\x1c\xbb\xe8\xd8\x8b]\xdd\xeb" +
	"\xc89\xc5\xa2cw\x94\\G8\x1d\xe1\xfa\xdd9\xb3" +
	"d\x97\xba\xfa\xc3\x0f\xbe\x9d\xe7\xd6\xee\xb0s\xfd\x8e-" +
	"L\xcb\xe6\xee\x82\x8c\xe9\xeaf\xd1c\x1a\xd5\x004\x04" +
	"0\x1a\xfb\x00X\x8a\"k&8\xe2\xf2\xa12\xf7\x04" +
	"6U\x8f\x05\x88M\x80\xd3jk\x0aa\xe6\x06'4" +
	"5\x8b8\x85\xa6\xf1=\xd64MN\xa1\xe9\xca\xa0i" +
	"\x96{%\xc7\xf6\x90g\xb0\x9a\xae\xfdW:ulv" +
	"'\xaa7\xbftoU:\xc6\xd2\xd3U:\x1a\xcb>" +
	"\xaabc,\xbfP\xa5\xb5\xb1\xf2\x92B\xc4\x01W\x11" +
	"\xf4\xc0N\xff1\xeez\x96cgi8 \x87~\x97" +
	"\x9b\x82\xc7 e{B\x14\xfch=\x11mD\x09\xab" +
	"j/3\x1bf\x00\xf8\xd1\x16Q\xf6*8\xf8\x11." +
	"\xd0\x16\xd6\x8f\xbf{\xc2\xba\xac\x89&\x00bac$" +
	"\x0fc\xa8\x0f\x88\xc1u\xac\x92\x16#\x8d\x1b\xeb\xf6\x02" +
	"1\x98\x8e$\xf6=\x8c\x88k\xacz\x11\x88\xb1RG" +
	"\x1a[\x1eF\xb6b,\x93y\x8b\xf5\x91'C4z" +
	"\xd1\xcfU\x8e\x8b\x95\xc1\xa1\x17\xfd\x88\xb6\x18\x1d\x07\xdd" +
	"^\xf4#V)\x91\xea%O\x85\x98\xb5\x98\x07\x00\xa2" +
	"\xc8 \xb2\xe6\x98\x9bO\xb7\x00\xb0\xed\x14\xd9\xb3\x04\x0d" +
	"\xc4f\x94\x8b{\xd6\x03\xb0\xdd\x14\xd9\xf3\x04\x914#" +
	"\x010\x0e\xac\x01`\xfb)\xb2\xc3\x04\x0dJ\x9a\x91\x02" +
	"\x18\x87\xb2\x00\xec Ev\x82\xa0\xa1\xd1f\xd4\x00\x8c" +
	"QI\xf77)\xb2\xb7\x09R+\x8f\x0d@\xb0\x01\xd0" +
	"\xdfR\xb6\xf3\x05\x9e1\x81\x8a\xc1xQp\xb7h\xd9" +
	"f\x01\xa4\x0a\x80\xa04\x19\xbe\xdd\x12\x19S\x0c\x02z" +
	"8\x170C1\x08\x9f\x0b8Rp\xb6\xca\x9d8}" +
	"6B\xcdr\xaf\\\xa0b\x82R\xe5!\x1b(\xb2\xff" +
	"\x13\xf4\xdd\x88\x8b\x00\xd8T\xe5\xf7\x0c\xd4Z!@d" +
	"\x0d\xd3\x9a:7\xf1\x16\xa79u\xac\xe4\x19\x18\xdb$" +
	"\x12\xf4J\xf3dmI\xa1\xa6\xb8\xbd)\xdbo\xa6\xc8" +
	"\x0a\x04#\x06Y]\x00,O\x91\x95\x08\x1a\x04C\x0a" +
	"\x15\xe5\xe2 E&$\x85\xee\x0a)4$\xb3K\x14" +
	"\xd9.\x12\xde|\xbf\x93\x0f\x86\xd7\x80\xa0\x06\xd8\xe3\x89" +
	"\xbcS\x16\xd8\x08\x04\x1b\xc3O\xee\xba\xd1\xa7/\xac\"" +
	"\xcf?\\\x16*\x7ff%\x12\x89\x1e\x0d\x8f\xa8 \xbc" +
	"MA8W\x09\x86yn\xc6\xcac\x0a\x08\xa6fh" +
	"\xdf\x15K\x93\xcd\x1a\xe2f\xab\xa4${)\xb2\x87\x14" +
	"I\x0eHI>@\x91=\"\x01\xadh\x92\xb9\xf2=" +
	"F\x91m\x9c\xa84\xcf\xc9=\xc1E\x8d\xd2\x02\x9f\xe1" +
	"\x9e\x07m\x96c\x0f\xe4o\x93\xd0t\x88<=\x12\xc6" +
	"\x7f43\x90N\xf4O\xa2\xde\x8b\xe2^}\x93\xb9W" +
	";\x00\xdbE\x91\xedW\xa0\xda\xd7U\xb54\x83\xd2\x90" +
	"{\x07\xb2\x8a\xa7iZh_\x87\xb6T<\xed5\x82" +
	"\x91uG`\xe9\xc2\xdc\x1a\xfd\xee\x91\xb3[B\xb17" +
	"\xab\x90\xbf\xdf\x14\x80<^s\xcb\x9e\x90'\x00])" +
	"2[\x11\x0e\x95u\xee\x89\x1a\x0dJ\xcel\xa4\xc8\x06" +
	"\xab\x1a\xe4\xeb'\xd3`_E\x83\x121\xda\x1b\xe2\xb0" +
	"gM\x15\x1c\x95GR\\NY\xac\x05\xcasX\x07" +
	"\x04\xeb\x00G\xe4\xc8\xa6\x9d\xafq\xe6I\x8d|6>" +
	"7\xe5gT\xfcr\x99\x81\xc5\xdd\xfed\xccro^" +
	"\xb90Uf\xc7\xcf\xa1\xb0\xf7\xbf\x01\x00\x00\xff\xff\xd6" +
	"K\xda\xc0"

func init() {
	schemas.Register(schema_ffaaf7385bc4adad,
		0x83479da67279e173,
		0xaa2f3c8ad1c3af24,
		0xace5517aafc86077,
		0xb737e899dd6633f1,
		0xba77e3fa3aa9b6ca,
		0xc5e65eec3dcf5b10,
		0xcc2f70676afee4e7,
		0xceba3c1a97be15f8,
		0xd9d61d1d803c85fc,
		0xde3a625e70772b9a,
		0xdf703ca0befc3afc,
		0xe313695ea9477b30,
		0xf34be5cbac1feed1,
		0xf41122f890a371a6,
		0xf44732c48f949ab8,
		0xf8e86a5c0baa01bc)
}
